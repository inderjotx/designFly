// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        String      @id @default(uuid())
  name      String
  password  String?
  email     String
  provider  String
  image     String?
  Design    Design[]
  bio       String?
  Heart     Heart[]
  BookMark  BookMark[]
  Followers Followers[] @relation("follower")
  Following Followers[] @relation("following")

  @@unique([email, provider])
}

model Design {
  id          String     @id @default(uuid())
  title       String
  description String
  userId      String
  user        User       @relation(fields: [userId], references: [id])
  imageKey    String
  Heart       Heart[]
  BookMark    BookMark[]
  PostTag     PostTag[]
}

model Heart {
  id       String @id @default(uuid())
  design   Design @relation(fields: [designId], references: [id], onDelete: Cascade)
  designId String
  userId   String
  user     User   @relation(fields: [userId], references: [id])

  @@unique([designId, userId])
}

model BookMark {
  id       String @id @default(uuid())
  design   Design @relation(fields: [designId], references: [id], onDelete: Cascade)
  designId String
  userId   String
  user     User   @relation(fields: [userId], references: [id])

  @@unique([designId, userId])
}

model Followers {
  follower    User   @relation(name: "follower", fields: [followerId], references: [id])
  followerId  String
  follwing    User   @relation(name: "following", fields: [followingId], references: [id])
  followingId String

  @@id([followerId, followingId])
}

model Tag {
  name    String    @id
  PostTag PostTag[]
}

model PostTag {
  designId String
  tagName  String

  Post Design @relation(fields: [designId], references: [id], onDelete: Cascade)
  tag  Tag    @relation(fields: [tagName], references: [name], onDelete: Cascade)

  @@id([designId, tagName])
}
